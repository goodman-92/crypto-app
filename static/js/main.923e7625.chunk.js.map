{"version":3,"sources":["config/routes.tsx","services/cryptoApi.ts","components/layouts/Loader.tsx","components/Homepage.tsx","components/Exchanges.tsx","components/Cryptocurrencies.tsx","components/CryptoDetails/partial/StatsArticle.tsx","components/CryptoDetails/partial/OtherArticle.tsx","components/LineChart.tsx","components/CryptoDetails/CryptoDetails.tsx","services/newsApi.ts","components/News.tsx","images/cryptocurrency.png","components/layouts/Navbar.tsx","components/layouts/Footer.tsx","App.tsx","config/store.ts","index.tsx"],"names":["Paths","cryptoApiHeader","createRequest","url","headers","cryptoApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getCryptos","query","count","getCryptosDetails","coinId","getCryptoHistory","timePeriod","getExchanges","useGetCryptosQuery","useGetCryptosDetailsQuery","useGetCryptoHistoryQuery","useGetExchangesQuery","makeLinkTo","path","routeParam","isDetails","CryptoDetails","Error","formatPath","split","splice","join","routes","props","className","exact","HomePage","Exchanges","Cryptocurrencies","News","Loader","Homepage","fetchedCryptos","data","isFetching","useState","totalMarketCap","total","totalMarkets","total24hVolume","totalExchanges","stats","setStats","useEffect","Title","level","span","title","value","millify","to","simplified","exchanges","map","exc","Panel","showArrow","header","Text","rank","src","iconUrl","name","volume","numberOfMarkets","marketShare","id","HTMLReactParser","description","fetchData","cryptos","setCryptos","searchWord","setSearchWord","filteredData","coins","filter","toLocaleLowerCase","includes","placeholder","onChange","e","currentTarget","gutter","coin","index","xs","sm","lg","toString","hoverable","extra","alt","Number","price","marketCap","change","Typography","StatsArticle","coinDetails","icon","DollarCircleOutlined","NumberOutlined","ThunderboltOutlined","allTimeHigh","TrophyOutlined","memo","OtherArticle","genericStats","FundOutlined","numberOfExchanges","MoneyCollectOutlined","approvedSupply","CheckOutlined","StopOutlined","ExclamationCircleOutlined","totalSupply","circulatingSupply","LineChart","coinName","coinHistory","currentPrice","coinPrice","coinTimeStamp","history","forEach","timestamp","push","parseInt","dayjs","format","labels","datasets","label","fill","backgroundColor","borderColor","options","scales","y","beginAtZero","useParams","setTimePeriod","fetchedCoin","slug","defaultValue","time","date","Option","links","type","href","target","rel","newsApiHeader","newsApi","getNews","newsCategory","useGetNewsQuery","extend","RelativeTime","Select","demoImage","fetchedCoins","selectedCategory","setSelectedCategory","fetchedNews","showSearch","optionFilterProp","filterOption","input","option","children","toLowerCase","indexOf","news","i","style","maxWidth","maxHeight","image","thumbnail","contentUrl","length","substring","provider","datePublished","startOf","fromNow","Navbar","activeMenu","setActiveMenu","screenSize","setScreenSize","handleResize","window","innerWidth","addEventListener","removeEventListener","size","onClick","prevState","MenuOutlined","theme","Item","HomeOutlined","BulbOutlined","Footer","color","textAlign","App","configureStore","reducer","middleware","getDefaultMiddleware","concat","ReactDOM","render","store","document","querySelector"],"mappings":"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","file":"static/js/main.923e7625.chunk.js","sourcesContent":["import {Route, Switch} from \"react-router-dom\";\nimport {Cryptocurrencies, CryptoDetails, Exchanges, Homepage, News} from \"../components\";\n\nexport enum Paths {\n  HomePage = '/',\n  Exchanges = '/exchanges',\n  Cryptocurrencies = '/cryptocurrencies',\n  CryptoDetails = '/crypto/:coinId', // /:id 를 붙여줘야한다\n  News = '/news'\n}\n\nexport const makeLinkTo = (path: Paths, routeParam?: string) => {\n  let isDetails = false;\n\n  switch (path) {\n    case Paths.CryptoDetails: {\n      if (!routeParam) throw Error('id를 입력하세요');\n      isDetails = true;\n      break;\n    }\n  }\n  if (isDetails){\n    const formatPath = path.split('/').splice(1,1).join()\n    return `/${formatPath}/${routeParam}`;\n  }\n  \n  return isDetails ? path.split('/').join() : path;\n};\n\ntype Props = {};\n\nconst routes = (props: Props) => {\n  return (\n    <div className=\"routes\">\n      <Switch>\n        <Route exact path={Paths.HomePage}><Homepage/></Route>\n        <Route exact path={Paths.Exchanges}><Exchanges/></Route>\n        <Route exact path={Paths.Cryptocurrencies}><Cryptocurrencies/></Route>\n        <Route exact path={Paths.CryptoDetails}><CryptoDetails/></Route>\n        <Route exact path={Paths.News}><News/></Route>\n      </Switch>\n    </div>\n  );\n};\n\nexport default routes\n","import {createApi, fetchBaseQuery} from \"@reduxjs/toolkit/query/react\";\n\nconst cryptoApiHeader = {\n  'x-rapidapi-host': 'coinranking1.p.rapidapi.com',\n  'x-rapidapi-key': '7a5497282fmsh987c4fff5ff5d47p1e8276jsn5c261faff3ac'\n}\n\nconst baseUrl = 'https://coinranking1.p.rapidapi.com'\n\nconst createRequest = (url: string) => ({url, headers: cryptoApiHeader});\n\nexport interface Coin {\n  id: number,\n  uuid: string,\n  slug: string,\n  symbol: string,\n  name: string,\n  color: string,\n  confirmedSupply: string,\n  description: string,\n  firstSeen: number,\n  history: String[],\n  iconType: string,\n  iconUrl: string,\n  change: number,\n  links: { name: string, type: string, url: string }[],\n  listedAt: number,\n  marketCap: number,\n  numberOfExchanges: number,\n  numberOfMarkets: number,\n  penalty: boolean,\n  price: string,\n  rank: number,\n  socials: { name: string, type: string, url: string }[],\n  totalSupply: number,\n  type: string,\n  volume: number\n  websiteUrl: string\n}\n\nexport interface Stats {\n  base: string,\n  limit: number,\n  offset: number,\n  total: number,\n  total24hVolume: number,\n  totalExchanges: number,\n  totalMarketCap: number,\n  totalMarkets: number\n}\n\ninterface Coins {\n  base: {\n    sign: string,\n    symbol: string\n  },\n  coins: Coin[],\n  stats: Stats\n}\n\ninterface CoinsResponse {\n  status: string,\n  data: Coins\n}\n\nexport interface CoinDetail extends Coin {\n  allTimeHigh: {\n    price: number\n  },\n  approvedSupply: boolean,\n  circulatingSupply: number\n}\n\ntype Response = {\n  data: any\n  status: string\n}\n\ninterface CoinResponse {\n  status: string,\n  data: {\n    base: {\n      sign: string,\n      symbol: string\n    },\n    coin: CoinDetail\n  }\n}\n\nexport interface CoinHistory { price: string, timestamp: number }\n\ninterface CoinHistoryResponse extends Response {\n  data: {\n    change: number,\n    history: CoinHistory[]\n  }\n}\n\ninterface ExchangesResponse  extends Response{\n  data: {\n    currencies: { iconUrl: string, id: number, sign: string, symbol: string, type: string, uuid: string }[],\n    exchanges: {\n      description: string,\n      iconUrl: string,\n      id: number,\n      lastTickerCreatedAt: number,\n      marketShare: number,\n      name: string,\n      numberOfMarkets: number,\n      rank: number,\n      uuid: string,\n      verified: boolean,\n      volume: number,\n      websiteUrl: string\n    }[],\n    stats: {\n      limit: number,\n      offset: number,\n      total: number\n    }\n  }\n}\n\nexport const cryptoApi = createApi({\n  reducerPath: 'cryptoApi',\n  baseQuery: fetchBaseQuery({baseUrl}),\n  endpoints: (builder) => ({\n    getCryptos: builder.query<CoinsResponse, { count?: number }>({\n      query: ({count = 100}) => createRequest(`/coins?limit=${count}`)\n    }),\n    getCryptosDetails: builder.query<CoinResponse, { coinId?: string }>({\n      query: ({coinId}) => createRequest(`/coin/${coinId}`),\n    }),\n    getCryptoHistory: builder.query<CoinHistoryResponse, { coinId?: string, timePeriod: string }>({\n      query: ({coinId, timePeriod}) => createRequest(`/coin/${coinId}/history/${timePeriod}`)\n    }) ,\n    getExchanges: builder.query<ExchangesResponse, any>({\n      query: ({count}) => createRequest(`/exchanges`)\n    })\n  })\n});\n\nexport const {\n  useGetCryptosQuery,\n  useGetCryptosDetailsQuery,\n  useGetCryptoHistoryQuery,\n  useGetExchangesQuery\n} = cryptoApi","import React from 'react';\nimport {Spin} from \"antd\";\n\ntype Props = {\n  \n};\n\nconst Loader = (props: Props) => {\n  return (\n    <div className=\"loader\">\n      <Spin/>\n    </div>\n  );\n};\n\nexport default Loader","import React, {useEffect, useState} from 'react';\nimport {Col, Row, Statistic, Typography} from \"antd\";\nimport {Stats, useGetCryptosQuery} from \"../services/cryptoApi\";\nimport millify from \"millify\";\nimport { Link } from 'react-router-dom';\nimport {Cryptocurrencies, News} from \"./index\";\nimport {makeLinkTo, Paths} from \"../config/routes\";\nimport Loader from \"./layouts/Loader\";\n\ntype Props = {};\n\nconst Homepage = (props: Props) => {\n  const {data: fetchedCryptos, isFetching} = useGetCryptosQuery({});\n  const [stats, setStats] = useState<Pick<Stats, 'total' | 'totalMarketCap' | 'totalExchanges' | 'totalMarkets' | 'total24hVolume'>>({\n    totalMarketCap: 0,\n    total: 0,\n    totalMarkets: 0,\n    total24hVolume: 0,\n    totalExchanges: 0\n  });\n\n  useEffect(() => {\n    if (fetchedCryptos?.data?.stats) {\n      setStats({\n        ...fetchedCryptos.data.stats\n      })\n    }\n  }, [fetchedCryptos])\n\n  if (isFetching) return <Loader/>;\n\n  return (\n    <>\n      <Typography.Title level={2} className=\"heading\">\n        Global Crypto Stats\n      </Typography.Title>\n      <Row>\n        <Col span={12}><Statistic key=\"tc\" title=\"Total Cryptocurrencies\" value={stats.total}/></Col>\n        <Col span={12}><Statistic key=\"te\" title=\"Total Exchanges\"\n                                  value={millify(stats.totalExchanges)}/></Col>\n        <Col span={12}><Statistic key=\"tm\" title=\"Total Market Cap\" value={millify(stats.totalMarketCap)}/></Col>\n        <Col span={12}><Statistic key=\"tv\" title=\"Total 24h Volume\" value={millify(stats.total24hVolume)}/></Col>\n        <Col span={12}><Statistic key=\"t2\" title=\"Total markets\" value={millify(stats.totalMarkets)}/></Col>\n      </Row>\n      <div className=\"home-heading-container\">\n        <Typography.Title level={2} className=\"home-title\">Top 10 Cryptocurrencies in world</Typography.Title>\n        <Typography.Title level={3} className=\"show-more\"><Link to={makeLinkTo(Paths.Cryptocurrencies)}>Show More</Link> </Typography.Title>\n      </div>\n      <Cryptocurrencies simplified/>\n      <div className=\"home-heading-container\">\n        <Typography.Title level={2} className=\"home-title\">Latest Crypto News</Typography.Title>\n        <Typography.Title level={3} className=\"show-more\"><Link to={makeLinkTo(Paths.News)}>Show More</Link> </Typography.Title>\n      </div>\n      <News simplified/>\n\n    </>\n  );\n};\n\nexport default Homepage","import React from 'react';\nimport {useGetExchangesQuery} from \"../services/cryptoApi\";\nimport Loader from \"./layouts/Loader\";\nimport {Avatar, Col, Collapse, Row, Typography} from \"antd\";\nimport millify from \"millify\";\nimport HTMLReactParser from \"html-react-parser\";\n\ntype Props = {};\n\nconst Exchanges = (props: Props) => {\n  const {data, isFetching} = useGetExchangesQuery({});\n\n  if (isFetching) return <Loader/>\n\n  return (\n    <>\n      <Row>\n        <Col span={6}>Exchanges</Col>\n        <Col span={6}>24H Trad Volume</Col>\n        <Col span={6}>Markets</Col>\n        <Col span={6}>Change</Col>\n      </Row>\n      <Row>\n        {\n          data?.data.exchanges.map((exc) => (\n            <Col span={24} key={exc.id}>\n              <Collapse>\n                <Collapse.Panel\n                  key={exc.id}\n                  showArrow={false}\n                  header={(\n                    <Row key={exc.id}>\n                      <Col span={6}>\n                        <Typography.Text><strong>{exc.rank}</strong></Typography.Text>\n                        <Avatar className=\"exchange-image\" src={exc.iconUrl}/>\n                        <Typography.Text><strong>{exc.name}</strong></Typography.Text>\n                      </Col>\n                      <Col span={6}>${millify(exc.volume)}</Col>\n                      <Col span={6}>{millify(exc.numberOfMarkets)}</Col>\n                      <Col span={6}>{millify(exc.marketShare)}%</Col>\n                    </Row>\n                  )}\n                >\n                  {HTMLReactParser(exc.description || '')}\n                </Collapse.Panel>\n              </Collapse>\n            </Col>\n          ))\n        }\n      </Row>\n    </>\n  );\n};\n\nexport default Exchanges","import React, {useEffect, useState} from 'react';\nimport {Coin, useGetCryptosQuery} from \"../services/cryptoApi\";\nimport {Card, Col, Input, Row} from \"antd\";\nimport {Link} from 'react-router-dom';\nimport millify from \"millify\";\nimport {makeLinkTo, Paths} from \"../config/routes\";\nimport Loader from \"./layouts/Loader\";\n\ntype Props = {\n  simplified?: boolean\n};\n\nconst Cryptocurrencies = ({simplified = false}: Props) => {\n  const count = simplified ? 10 : 100;\n  const {data: fetchData, isFetching} = useGetCryptosQuery({count});\n  const [cryptos, setCryptos] = useState<Coin[]>();\n  const [searchWord, setSearchWord] = useState(\"\");\n\n  useEffect(() => {\n    const filteredData = fetchData?.data?.coins.filter(({name}) => name.toLocaleLowerCase().includes(searchWord.toLocaleLowerCase()))\n    setCryptos(filteredData);\n\n  }, [fetchData, searchWord]);\n\n  if (isFetching || !cryptos) return <Loader/>;\n\n  const handleSearchWord = (e: React.FormEvent<HTMLInputElement>) => setSearchWord(e.currentTarget.value);\n\n  return (\n    <>\n      {\n        !simplified &&\n        <div className=\"search-crypto\">\n\t\t\t\t\t<Input placeholder=\"Search Cryptocurrency\" onChange={handleSearchWord}/>\n\t\t\t\t</div>\n      }\n      <Row gutter={[32, 32]} className='crypto-card-container'>\n        {\n          cryptos.map((coin, index) => (\n            <Col xs={24} sm={12} lg={6} className='crypto-card' key={coin.id + index.toString()}>\n              <Link to={makeLinkTo(Paths.CryptoDetails, coin.id.toString())}>\n                <Card title={`${coin.rank}. ${coin.name}`}\n                      hoverable\n                      extra={<img className='crypto-image' src={coin.iconUrl} alt={coin.name}/>}>\n                  <p>Price: {millify(Number(coin.price))}</p>\n                  <p>Market Cap: {millify(Number(coin.marketCap))}</p>\n                  <p>Daily Change: {millify(Number(coin.change))}%</p>\n                </Card>\n              </Link>\n            </Col>\n          ))\n        }\n      </Row>\n    </>\n  );\n};\n\nexport default Cryptocurrencies","import React, { memo } from 'react';\nimport {Col, Typography} from \"antd\";\nimport millify from \"millify\";\nimport {DollarCircleOutlined, NumberOutlined, ThunderboltOutlined, TrophyOutlined} from \"@ant-design/icons\";\nimport {CoinDetail} from \"../../../services/cryptoApi\";\n\ntype Props = {\n  coinDetails: CoinDetail\n};\n\nconst {Title, Text} = Typography;\n\n\nconst StatsArticle = ({coinDetails}: Props) => {\n\n  const stats: { title: string, value: string, icon: any }[] = [\n    {\n      title: 'Price to USD',\n      value: `$ ${coinDetails.price && millify(+coinDetails.price)}`,\n      icon: <DollarCircleOutlined/>\n    },\n    {title: 'Rank', value: coinDetails.rank.toString(), icon: <NumberOutlined/>},\n    {\n      title: '24h Volume',\n      value: `$ ${coinDetails.volume && millify(coinDetails.volume)}`,\n      icon: <ThunderboltOutlined/>\n    },\n    {\n      title: 'Market Cap',\n      value: `$ ${coinDetails.marketCap && millify(coinDetails.marketCap)}`,\n      icon: <DollarCircleOutlined/>\n    },\n    {title: 'All-time-high(daily avg.)', value: `$ ${millify(coinDetails.allTimeHigh.price)}`, icon: <TrophyOutlined/>},\n  ];\n\n  return (\n    <Col className=\"coin-value-statistics\">\n      <Col className=\"coin-value-statistics-heading\">\n        <Title level={3} className=\"coin-details-heading\">\n          {coinDetails.name} Value Statistics\n        </Title>\n        <p>\n          An overview showing the stats of\n        </p>\n      </Col>\n      {\n        stats.map(({icon, title, value}) => (\n          <Col key={title} className=\"coin-stats\">\n            <Col className=\"coin-stats-name\">\n              <Text>{icon}</Text>\n              <Text>{title}</Text>\n            </Col>\n            <Text className=\"stats\">{value}</Text>\n          </Col>\n        ))\n      }\n    </Col>\n  );\n};\n\nexport default memo(StatsArticle)","import React, {memo} from 'react';\nimport {Col, Typography} from \"antd\";\nimport millify from \"millify\";\nimport {\n  CheckOutlined,\n  ExclamationCircleOutlined,\n  FundOutlined,\n  MoneyCollectOutlined,\n  StopOutlined\n} from \"@ant-design/icons\";\nimport {CoinDetail} from \"../../../services/cryptoApi\";\n\ntype Props = {\n  coinDetails: CoinDetail\n};\nconst {Title, Text} = Typography;\n\n\nconst OtherArticle = ({coinDetails}: Props) => {\n  const genericStats = [\n    {title: 'Number Of Markets', value: coinDetails.numberOfMarkets, icon: <FundOutlined/>},\n    {title: 'Number Of Exchanges', value: coinDetails.numberOfExchanges, icon: <MoneyCollectOutlined/>},\n    {\n      title: 'Aprroved Supply',\n      value: coinDetails.approvedSupply ? <CheckOutlined/> : <StopOutlined/>,\n      icon: <ExclamationCircleOutlined/>\n    },\n    {title: 'Total Supply', value: `$ ${millify(coinDetails.totalSupply)}`, icon: <ExclamationCircleOutlined/>},\n    {\n      title: 'Circulating Supply',\n      value: `$ ${millify(coinDetails.circulatingSupply)}`,\n      icon: <ExclamationCircleOutlined/>\n    },\n  ];\n\n\n  return (\n    <Col className=\"other-stats-info\">\n      <Col className=\"coin-value-statistics-heading\">\n        <Title level={3} className=\"coin-details-heading\">\n          {coinDetails.name} Value Statistics\n        </Title>\n        <p>\n          An overview showing the stats of all cryptocurrencies\n        </p>\n      </Col>\n      {\n        genericStats.map(({icon, title, value}) => (\n          <Col key={title} className=\"coin-stats\">\n            <Col className=\"coin-stats-name\">\n              <Text>{icon}</Text>\n              <Text>{title}</Text>\n            </Col>\n            <Text className=\"stats\">{value}</Text>\n          </Col>\n        ))\n      }\n    </Col>\n  );\n};\n\nexport default memo(OtherArticle)","import React from 'react';\nimport {Col, Row, Typography} from \"antd\";\nimport {CoinHistory} from \"../services/cryptoApi\";\nimport {Line} from \"react-chartjs-2\";\nimport * as Chart from \"chart.js\";\nimport dayjs from \"dayjs\";\n\ntype Props = {\n  coinHistory: {\n    history: CoinHistory[],\n    change: number\n  }\n  currentPrice: string\n  coinName: string\n};\n\nconst LineChart = ({coinName, coinHistory, currentPrice}: Props) => {\n  const coinPrice: number[] = [];\n  const coinTimeStamp: string[] = [];\n\n  coinHistory.history.forEach(({timestamp, price}) => {\n    coinPrice.push(parseInt(price, 10))\n    coinTimeStamp.push(dayjs(timestamp).format('YY/MM/DD'))\n  })\n\n  const data: Chart.ChartData = {\n    labels: coinTimeStamp,\n    datasets: [{\n      label: 'Price in USD',\n      data: coinPrice,\n      fill: false,\n      backgroundColor: '#0071bd',\n      borderColor: '#0071bd'\n    }]\n  };\n\n  const options: Chart.ChartOptions = {\n    scales: {\n      y: {\n        beginAtZero: false\n      }\n    }\n  }\n\n  return (\n    <>\n      <Row className=\"chart-header\">\n        <Typography.Title level={5} className=\"chart-title\">\n          {coinName} Price Chart\n        </Typography.Title>\n        <Col className=\"price-container\">\n          <Typography.Title level={5} className=\"price-change\">{coinHistory.change}%</Typography.Title>\n          <Typography.Title level={5} className=\"current-price\">Current {coinName} Price:\n            ${currentPrice}</Typography.Title>\n        </Col>\n        <Line data={data} options={options}/>\n      </Row>\n    </>\n  )\n}\n\n\nexport default LineChart","import React, {useState} from 'react';\nimport {Col, Row, Select, Typography,} from \"antd\";\nimport {useParams} from \"react-router-dom\";\nimport {useGetCryptoHistoryQuery, useGetCryptosDetailsQuery} from \"../../services/cryptoApi\";\nimport millify from \"millify\";\nimport StatsArticle from \"./partial/StatsArticle\";\nimport OtherArticle from \"./partial/OtherArticle\";\nimport HTMLReactParser from \"html-react-parser\";\nimport LineChart from \"../LineChart\";\nimport Loader from \"../layouts/Loader\";\n\ntype Props = {};\nconst {Title} = Typography;\ntype Time = '3h' | '24h' | '7d' | '30d' | '1y' | '3m' | '3y' | '5y'\n\n\nconst CryptoDetails = (props: Props) => {\n  const {coinId} = useParams<{ coinId: string | undefined }>();\n  const [timePeriod, setTimePeriod] = useState<Time>('7d');\n\n  const {isFetching, data: fetchedCoin} = useGetCryptosDetailsQuery({coinId})\n  const { data: coinHistory} = useGetCryptoHistoryQuery({coinId, timePeriod})\n  const coinDetails = fetchedCoin?.data?.coin;\n\n  if (isFetching || !fetchedCoin || !coinDetails) return <Loader/>;\n\n  const time: Time[] = ['3h', '24h', '7d', '30d', '1y', '3m', '3y', '5y'];\n\n  const handleTimePeriod = (time: Time) => setTimePeriod(time);\n\n  return (\n    <Col className='coin-detail-container'>\n      <Col className='coin-heading-container'>\n        <Title level={2} className='coin-name'>\n          {coinDetails.name} ({coinDetails.slug}) Price\n        </Title>\n        <p>\n          {coinDetails.name} live price in US dollars\n          View value static sticks, market cap and supply.\n        </p>\n      </Col>\n      <Select\n        defaultValue=\"7d\" className=\"select-timeperiod\" placeholder=\"Select Time Period\"\n        onChange={handleTimePeriod}\n      >\n        {time.map((date) => (<Select.Option key={date} value={date}>{date}</Select.Option>))}\n      </Select>\n\n      {\n        coinHistory?.data && <LineChart coinHistory={coinHistory.data} currentPrice={millify(+coinDetails.price)} coinName={coinDetails.name}/>\n      }\n      <Col className=\"stats-container\">\n        <StatsArticle coinDetails={coinDetails}/>\n        <OtherArticle coinDetails={coinDetails}/>\n      </Col>\n      <Col className=\"coin-desc-link\">\n        <Row className=\"coin-desc\">\n          <Title level={2} className=\"coin-details-heading\">\n            What is {coinDetails.name}\n          </Title>\n          {HTMLReactParser(coinDetails.description)}\n        </Row>\n        <Col className=\"coin-links\">\n          <Title level={3} className=\"coin-details-heading\">\n            {coinDetails.name} Links\n          </Title>\n          {\n            coinDetails.links.map(({type, url, name}) => (\n              <Row className=\"coin-link\" key={name}>\n                <Title level={5} className=\"link-name\">\n                  {type}\n                </Title>\n                <a href={url} target=\"_blank\" rel=\"noreferrer\">\n                  {name}\n                </a>\n              </Row>\n            ))\n          }\n        </Col>\n      </Col>\n    </Col>\n  )\n    ;\n};\n\nexport default CryptoDetails","import {createApi, fetchBaseQuery} from \"@reduxjs/toolkit/query/react\";\n\nconst newsApiHeader = {\n  'x-bingapis-sdk': 'true',\n  'x-rapidapi-host': 'bing-news-search1.p.rapidapi.com',\n  'x-rapidapi-key': '7a5497282fmsh987c4fff5ff5d47p1e8276jsn5c261faff3ac'\n};\n\nconst baseUrl = 'https://bing-news-search1.p.rapidapi.com';\n\nconst createRequest = (url: string) => ({url, headers: newsApiHeader});\n\ninterface News {\n  name: string,\n  url: string,\n  description: string\n  image: {\n    _type: string,\n    thumbnail: {\n      _type: string,\n      contentUrl: string,\n      width: number,\n      height: number\n    }\n  },\n  about: { _type: string, readLink: string, name: string }[],\n  datePublished: string,\n  category: string,\n  provider: { name: string, image: { thumbnail: { contentUrl: string } } }[],\n  _type: string\n}\n\ninterface NewsResponse {\n  queryContext: {},\n  readLink: string,\n  sort: object[],\n  totalEstimatedMatches: number,\n  value: News[],\n  _type: string\n}\n\nexport const newsApi = createApi({\n  reducerPath: 'newsApi',\n  baseQuery: fetchBaseQuery({baseUrl}),\n  endpoints: (builder) => ({\n    getNews: builder.query<NewsResponse, { newsCategory: string, count: number }>({\n      query: ({\n                newsCategory = \"\",\n                count = 10\n              }) => createRequest(`/news/search?q=${newsCategory}&safeSearch=off&textFormat=Raw&freshness=Day&count=${count}`)\n    })\n  })\n});\n\nexport const {\n  useGetNewsQuery\n} = newsApi","import React, {useState} from 'react';\nimport {Avatar, Card, Col, Row, Select, Typography} from \"antd\";\nimport {useGetNewsQuery} from \"../services/newsApi\";\nimport dayjs from \"dayjs\";\nimport RelativeTime from \"dayjs/plugin/relativeTime\"\nimport {useGetCryptosQuery} from \"../services/cryptoApi\";\nimport Loader from \"./layouts/Loader\";\n\ndayjs.extend(RelativeTime);\n\ntype Props = {\n  simplified?: boolean\n};\n\nconst {Title, Text} = Typography;\nconst {Option} = Select;\n\nconst demoImage = 'https://www.bing.com/th?id=OVFT.mpzuVZnv8dwIMRfQGPbOPC&pid=News';\n\nconst News = ({simplified = false}: Props) => {\n  const {data: fetchedCoins} = useGetCryptosQuery({})\n\n  const [selectedCategory, setSelectedCategory] = useState('Cryptocurrency');\n  \n  const {data: fetchedNews, isFetching} = useGetNewsQuery({\n    newsCategory: selectedCategory,\n    count: simplified ? 10 : 100\n  });\n\n\n  if (isFetching || !fetchedNews?.value) return <Loader/>;\n\n  const handleCategory = (value: any) => setSelectedCategory(value);\n  \n  const handleFilterOption = (input: any, option: any) => {\n    return option.children.toLowerCase().indexOf(input.toLowerCase()) > -1\n  };\n\n  return (\n    <Row gutter={[24, 24]}>\n      {\n        !simplified && (\n          <Col span={24}>\n            <Select showSearch\n                    className=\"select-news\"\n                    placeholder=\"Select a Crypto\"\n                    optionFilterProp=\"children\"\n                    onChange={handleCategory}\n                    filterOption={handleFilterOption}\n            >\n              {\n                fetchedCoins?.data?.coins.map(({name, id}) => {\n                  return <Option key={id} value={name} children={name}/>\n                })\n\n              }\n\n            </Select>\n\n          </Col>\n        )\n      }\n\n      {fetchedNews.value.map((news, i) => {\n        return (\n          <Col xs={24} sm={12} lg={8} key={i}>\n            <Card hoverable className=\"news-card\">\n              <a href={news.url} target=\"_blank\" rel=\"noreferrer\">\n                <div className=\"news-image-container\">\n                  <Title className=\"news-title\" level={4}>{news.name}</Title>\n                  <img style={{maxWidth: 200, maxHeight: 200}} src={news?.image?.thumbnail?.contentUrl || demoImage}\n                       alt={news.name}/>\n                </div>\n                <p>\n                  {news.description.length > 100 ? news.description.substring(0, 100) + '...' : news.description}\n                </p>\n                <div className=\"provider-container\">\n                  <div>\n                    <Avatar src={news.provider[0]?.image?.thumbnail?.contentUrl || demoImage} alt={news.name}/>\n                    <Text className=\"provider-name\">\n                      {news.provider[0]?.name}\n                    </Text>\n                  </div>\n                  {dayjs(news.datePublished).startOf('seconds').fromNow()}\n                </div>\n\n              </a>\n            </Card>\n          </Col>\n        )\n      })}</Row>\n  )\n    ;\n};\n\nexport default News","export default __webpack_public_path__ + \"static/media/cryptocurrency.1548aced.png\";","import {Avatar, Button, Menu, Typography} from \"antd\";\nimport {Link} from 'react-router-dom';\nimport icon from '../../images/cryptocurrency.png';\nimport {BulbOutlined, FundOutlined, HomeOutlined, MenuOutlined, MoneyCollectOutlined} from \"@ant-design/icons\";\nimport {makeLinkTo, Paths} from \"../../config/routes\";\nimport {useEffect, useState} from \"react\";\n\nconst Navbar = (props: any) => {\n  const [activeMenu, setActiveMenu] = useState(false);\n  const [screenSize, setScreenSize] = useState<number | null>(null);\n\n  useEffect(() => {\n    const handleResize = () => setScreenSize(window.innerWidth);\n    window.addEventListener('resize', handleResize);\n\n    return () => {\n      window.removeEventListener('resize', handleResize)\n    }\n  }, []);\n\n  useEffect(() => {\n    setActiveMenu(!screenSize || screenSize > 768);\n  }, [screenSize])\n\n\n  const handleActiveMenu = () => setActiveMenu((prevState => !prevState));\n\n  return (\n    <div className='nav-container'>\n      <div className=\"logo-container\">\n        <Avatar src={icon} size=\"large\"/>\n        <Typography.Title level={2} className='logo'>\n          <Link to=\"/\">Crytoverse</Link>\n        </Typography.Title>\n        <Button className=\"menu-control-container\" onClick={handleActiveMenu}>\n          <MenuOutlined/>\n        </Button>\n      </div>\n      {\n        activeMenu &&\n          <Menu theme=\"dark\">\n            <Menu.Item key={Paths.HomePage} icon={<HomeOutlined/>}><Link\n              to={makeLinkTo(Paths.HomePage)}>Home</Link></Menu.Item>\n            <Menu.Item key={Paths.Cryptocurrencies} icon={<FundOutlined/>}><Link to={makeLinkTo(Paths.Cryptocurrencies)}>Crypto\n              currencies</Link></Menu.Item>\n            <Menu.Item key={Paths.Exchanges} icon={<MoneyCollectOutlined/>}><Link\n              to={makeLinkTo(Paths.Exchanges)}>Exchanges</Link></Menu.Item>\n            <Menu.Item key={Paths.News} icon={<BulbOutlined/>}><Link to={makeLinkTo(Paths.News)}>News</Link></Menu.Item>\n          </Menu>\n      }\n    </div>\n  )\n}\n\nexport default Navbar;","import React from 'react';\nimport {Space, Typography} from \"antd\";\nimport {Link} from \"react-router-dom\";\nimport {makeLinkTo, Paths} from \"../../config/routes\";\n\nconst Footer = () => {\n  return (\n    <div className=\"footer\">\n      <Typography.Title level={5} style={{color: 'white', textAlign: 'center'}}>\n        Cryptoverse <br/>\n        All rights reserved\n      </Typography.Title>\n      <Space>\n        <Link to={makeLinkTo(Paths.HomePage)}>Home</Link>\n        <Link to={makeLinkTo(Paths.Exchanges)}>Exchange</Link>\n        <Link to={makeLinkTo(Paths.News)}>News</Link>\n      </Space>\n    </div>\n  );\n};\n\nexport default Footer","import {Footer, Navbar} from './components';\nimport {Layout} from \"antd\";\nimport Routes from \"./config/routes\";\nimport './App.css'\n\nconst App = () => {\n  return (\n    <div className=\"app\">\n      <div className=\"navbar\">\n        <Navbar/>\n      </div>\n      <div className=\"main\">\n        <Layout>\n          <Routes/>\n        </Layout>\n        <Footer/>\n      </div>\n    </div>\n  );\n};\n\nexport default App","import {configureStore} from \"@reduxjs/toolkit\";\n\nimport {cryptoApi} from \"../services/cryptoApi\";\nimport {newsApi} from \"../services/newsApi\";\n\nexport default configureStore({\n  reducer: {\n    [cryptoApi.reducerPath]: cryptoApi.reducer,\n    [newsApi.reducerPath]: newsApi.reducer\n  },\n  middleware: (getDefaultMiddleware ) => getDefaultMiddleware().concat([cryptoApi.middleware, newsApi.middleware])\n});","import React from 'react'\nimport ReactDOM from 'react-dom';\n\nimport  App from './App';\nimport {HashRouter} from \"react-router-dom\";\nimport 'antd/dist/antd.css';\n\nimport {Provider} from \"react-redux\";\nimport store from \"./config/store\";\n\nReactDOM.render(\n  <HashRouter>\n    <Provider store={store}>\n      <App/>\n    </Provider>\n  </HashRouter>\n  , document.querySelector('#root'))"],"sourceRoot":""}